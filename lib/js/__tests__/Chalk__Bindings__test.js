// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Chalk = require("chalk");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

Jest.describe("Chalk Bindings", (function (param) {
        var $$eval = function (c) {
          var x;
          try {
            x = c("Hello World");
          }
          catch (raw_e){
            var e = Caml_js_exceptions.internalToOCamlException(raw_e);
            console.log(e);
            return false;
          }
          return typeof x === "string";
        };
        Jest.test("Chalk.reset", (function (param) {
                var result = $$eval(Chalk.reset);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bold", (function (param) {
                var result = $$eval(Chalk.bold);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.dim", (function (param) {
                var result = $$eval(Chalk.dim);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.italic", (function (param) {
                var result = $$eval(Chalk.italic);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.underline", (function (param) {
                var result = $$eval(Chalk.underline);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.inverse", (function (param) {
                var result = $$eval(Chalk.inverse);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.hidden", (function (param) {
                var result = $$eval(Chalk.hidden);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.strikethrough", (function (param) {
                var result = $$eval(Chalk.strikethrough);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.visible", (function (param) {
                var result = $$eval(Chalk.visible);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.black", (function (param) {
                var result = $$eval(Chalk.black);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.red", (function (param) {
                var result = $$eval(Chalk.red);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.green", (function (param) {
                var result = $$eval(Chalk.green);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.yellow", (function (param) {
                var result = $$eval(Chalk.yellow);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.blue", (function (param) {
                var result = $$eval(Chalk.blue);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.magenta", (function (param) {
                var result = $$eval(Chalk.magenta);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.cyan", (function (param) {
                var result = $$eval(Chalk.cyan);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.white", (function (param) {
                var result = $$eval(Chalk.white);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.blackBright", (function (param) {
                var result = $$eval(Chalk.blackBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.gray", (function (param) {
                var result = $$eval(Chalk.gray);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.grey", (function (param) {
                var result = $$eval(Chalk.grey);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.redBright", (function (param) {
                var result = $$eval(Chalk.redBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.greenBright", (function (param) {
                var result = $$eval(Chalk.greenBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.yellowBright", (function (param) {
                var result = $$eval(Chalk.yellowBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.blueBright", (function (param) {
                var result = $$eval(Chalk.blueBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.magentaBright", (function (param) {
                var result = $$eval(Chalk.magentaBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.cyanBright", (function (param) {
                var result = $$eval(Chalk.cyanBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.whiteBright", (function (param) {
                var result = $$eval(Chalk.whiteBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgBlack", (function (param) {
                var result = $$eval(Chalk.bgBlack);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgRed", (function (param) {
                var result = $$eval(Chalk.bgRed);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgGreen", (function (param) {
                var result = $$eval(Chalk.bgGreen);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgYellow", (function (param) {
                var result = $$eval(Chalk.bgYellow);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgBlue", (function (param) {
                var result = $$eval(Chalk.bgBlue);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgMagenta", (function (param) {
                var result = $$eval(Chalk.bgMagenta);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgCyan", (function (param) {
                var result = $$eval(Chalk.bgCyan);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgWhite", (function (param) {
                var result = $$eval(Chalk.bgWhite);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgBlackBright", (function (param) {
                var result = $$eval(Chalk.bgBlackBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgGray", (function (param) {
                var result = $$eval(Chalk.bgGray);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgGrey", (function (param) {
                var result = $$eval(Chalk.bgGrey);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgRedBright", (function (param) {
                var result = $$eval(Chalk.bgRedBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgGreenBright", (function (param) {
                var result = $$eval(Chalk.bgGreenBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgYellowBright", (function (param) {
                var result = $$eval(Chalk.bgYellowBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgBlueBright", (function (param) {
                var result = $$eval(Chalk.bgBlueBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgMagentaBright", (function (param) {
                var result = $$eval(Chalk.bgMagentaBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgCyanBright", (function (param) {
                var result = $$eval(Chalk.bgCyanBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgWhiteBright", (function (param) {
                var result = $$eval(Chalk.bgWhiteBright);
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.rgb", (function (param) {
                var result = $$eval(Chalk.rgb(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.hex", (function (param) {
                var result = $$eval(Chalk.hex("#000000"));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.keyword", (function (param) {
                var result = $$eval(Chalk.keyword("red"));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.hsl", (function (param) {
                var result = $$eval(Chalk.hsl(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.hsv", (function (param) {
                var result = $$eval(Chalk.hsv(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.hwb", (function (param) {
                var result = $$eval(Chalk.hwb(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.ansi", (function (param) {
                var result = $$eval(Chalk.ansi(0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.ansi256", (function (param) {
                var result = $$eval(Chalk.ansi256(0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgRgb", (function (param) {
                var result = $$eval(Chalk.bgRgb(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgHex", (function (param) {
                var result = $$eval(Chalk.bgHex("#000000"));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgKeyword", (function (param) {
                var result = $$eval(Chalk.bgKeyword("red"));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgHsl", (function (param) {
                var result = $$eval(Chalk.bgHsl(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgHsv", (function (param) {
                var result = $$eval(Chalk.bgHsv(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgHwb", (function (param) {
                var result = $$eval(Chalk.bgHwb(0, 0, 0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        Jest.test("Chalk.bgAnsi", (function (param) {
                var result = $$eval(Chalk.bgAnsi(0));
                return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
              }));
        return Jest.test("Chalk.bgAnsi256", (function (param) {
                      var result = $$eval(Chalk.bgAnsi256(0));
                      return Jest.ExpectJs.toBe(true, Jest.ExpectJs.expect(result));
                    }));
      }));

/*  Not a pure module */
