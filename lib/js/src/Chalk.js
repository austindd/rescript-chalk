// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Chalk__Keyword = require("./Chalk__Keyword.js");

function levelToJs(param) {
  return param + 0 | 0;
}

function levelFromJs(param) {
  if (param <= 3 && 0 <= param) {
    return param - 0 | 0;
  }
  
}

function level(t) {
  return levelFromJs(t.level);
}

function levelExn(t) {
  var x = levelFromJs(t.level);
  if (x !== undefined) {
    return x;
  }
  throw {
        RE_EXN_ID: "Failure",
        _1: "Chalk.level: Unexpected value for the color support level",
        Error: new Error()
      };
}

function newChalkInstance(t, level) {
  if (level !== undefined) {
    return t.Instance({
                level: level + 0 | 0
              });
  } else {
    return t.Instance(undefined);
  }
}

var Modifier = {};

var Color = {};

var BgColor = {};

function hsv(t, h, s, v) {
  try {
    return t.hsv(h, s, v);
  }
  catch (exn){
    return t;
  }
}

function bgHsv(t, h, s, v) {
  try {
    return t.bgHsv(h, s, v);
  }
  catch (exn){
    return t;
  }
}

function applyStyleU(t, str) {
  return t(str);
}

function applyStyleManyU(t, strArray) {
  return t(strArray);
}

function applyStyle(t, str) {
  return t(str);
}

function applyStyleMany(t, strArray) {
  return t(strArray);
}

var levelFromInt = levelFromJs;

var levelToInt = levelToJs;

var Keyword = Chalk__Keyword;

function ColorModel_keyword(prim, prim$1) {
  return prim.keyword(prim$1);
}

var ColorModel = {
  keyword: ColorModel_keyword,
  hsv: hsv
};

function BgColorModel_bgKeyword(prim, prim$1) {
  return prim.bgKeyword(prim$1);
}

var BgColorModel = {
  bgKeyword: BgColorModel_bgKeyword,
  bgHsv: bgHsv
};

function keyword(prim, prim$1) {
  return prim.keyword(prim$1);
}

function bgKeyword(prim, prim$1) {
  return prim.bgKeyword(prim$1);
}

exports.levelFromInt = levelFromInt;
exports.levelToInt = levelToInt;
exports.level = level;
exports.levelExn = levelExn;
exports.Keyword = Keyword;
exports.Modifier = Modifier;
exports.Color = Color;
exports.BgColor = BgColor;
exports.ColorModel = ColorModel;
exports.BgColorModel = BgColorModel;
exports.keyword = keyword;
exports.hsv = hsv;
exports.bgKeyword = bgKeyword;
exports.bgHsv = bgHsv;
exports.applyStyleU = applyStyleU;
exports.applyStyleManyU = applyStyleManyU;
exports.applyStyle = applyStyle;
exports.applyStyleMany = applyStyleMany;
exports.newChalkInstance = newChalkInstance;
/* Chalk__Keyword Not a pure module */
