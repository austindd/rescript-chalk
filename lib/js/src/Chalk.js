// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function levelToJs(param) {
  return param + 0 | 0;
}

function levelFromJs(param) {
  if (param <= 3 && 0 <= param) {
    return param - 0 | 0;
  }
  
}

function level(t) {
  return levelFromJs(t.level);
}

function levelExn(t) {
  var x = levelFromJs(t.level);
  if (x !== undefined) {
    return x;
  }
  throw {
        RE_EXN_ID: "Failure",
        _1: "Chalk.level: Unexpected value for the color support level",
        Error: new Error()
      };
}

function newChalkInstance(t, level) {
  if (level !== undefined) {
    return t.Instance({
                level: level + 0 | 0
              });
  } else {
    return t.Instance(undefined);
  }
}

function applyU(t, str) {
  return t(str);
}

function applyManyU(t, strArray) {
  return t(strArray);
}

function apply(t, str) {
  return t(str);
}

function applyMany(t, strArray) {
  return t(strArray);
}

var levelFromInt = levelFromJs;

var levelToInt = levelToJs;

var Modifier;

var Color;

var BgColor;

var ColorModel;

var BgColorModel;

exports.levelToJs = levelToJs;
exports.levelFromJs = levelFromJs;
exports.levelFromInt = levelFromInt;
exports.levelToInt = levelToInt;
exports.level = level;
exports.levelExn = levelExn;
exports.Modifier = Modifier;
exports.Color = Color;
exports.BgColor = BgColor;
exports.ColorModel = ColorModel;
exports.BgColorModel = BgColorModel;
exports.applyU = applyU;
exports.applyManyU = applyManyU;
exports.apply = apply;
exports.applyMany = applyMany;
exports.newChalkInstance = newChalkInstance;
/* No side effect */
